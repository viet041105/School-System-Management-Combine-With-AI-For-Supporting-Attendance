@{
    ViewBag.Title = "Đăng Ký";
    Layout = "~/Views/Shared/_Layout_Empty.cshtml";
}
<style>
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

    :root {
        --primary-color: #4776E6;
        --secondary-color: #8E54E9;
        --text-color: #2d3748;
        --input-border: #e2e8f0;
        --input-focus: #6366f1;
        --danger-color: #e53e3e;
        --success-color: #10b981;
        --bg-light: #f8fafc;
        --shadow-color: rgba(0, 0, 0, 0.1);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #89f7fe, #66a6ff);
        background-size: 200% 200%;
        animation: gradientShift 8s ease infinite;
        color: var(--text-color);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    @@keyframes gradientShift {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    .register-container {
        width: 420px;
        max-width: 95%;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 10px 30px var(--shadow-color);
        padding: 35px;
        position: relative;
    }

        .register-container h2 {
            font-size: 1.8rem;
            text-align: center;
            margin-bottom: 30px;
            font-weight: 600;
        }

    form {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .input-group {
        position: relative;
    }

        .input-group input {
            width: 100%;
            padding: 15px 45px;
            border: 1.5px solid var(--input-border);
            border-radius: 8px;
            font-size: 0.95rem;
            background-color: var(--bg-light);
            color: #4a5568;
            transition: 0.25s ease;
        }

            .input-group input:focus {
                border-color: var(--input-focus);
                box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.15);
                background-color: #fff;
                outline: none;
            }

            .input-group input::placeholder {
                color: #a0aec0;
            }

        .input-group i {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #718096;
            font-size: 1rem;
        }

    .error-message {
        display: none;
        color: var(--danger-color);
        font-size: 0.8rem;
        margin-top: 8px;
        padding-left: 12px;
    }

    .input-group.error input {
        border-color: var(--danger-color);
        background-color: #fff8f8;
    }

    .input-group.error i {
        color: var(--danger-color);
    }

    .input-group.error .error-message {
        display: block;
    }

    .btn-register {
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 15px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        box-shadow: 0 4px 12px rgba(99, 102, 241, 0.25);
    }

        .btn-register:hover {
            background: linear-gradient(90deg, #3d68d8, #7c46d4);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(99, 102, 241, 0.3);
        }

        .btn-register:active {
            transform: translateY(1px);
            box-shadow: 0 2px 8px rgba(99, 102, 241, 0.25);
        }

        .btn-register i {
            font-size: 1rem;
        }

    .toggle-text {
        margin-top: 25px;
        text-align: center;
        font-size: 0.9rem;
        color: #718096;
    }

    .toggle-form {
        color: var(--input-focus);
        font-weight: 500;
        text-decoration: none;
        transition: color 0.2s ease;
    }

        .toggle-form:hover {
            color: #4f46e5;
            text-decoration: underline;
        }

    /* Notification System */
    .notification-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
        pointer-events: none;
    }

    .notification {
        min-width: 300px;
        background-color: #fff;
        color: #4a5568;
        padding: 16px 20px;
        border-radius: 8px;
        margin-bottom: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        animation: slideInRight 0.4s ease-out;
        border-left: 4px solid #4a5568;
        font-size: 0.95rem;
        pointer-events: auto;
    }

        .notification.success {
            border-left-color: #10b981;
            background-color: #ecfdf5;
        }

            .notification.success .notification-icon {
                color: #10b981;
            }

        .notification.error {
            border-left-color: #ef4444;
            background-color: #fef2f2;
        }

            .notification.error .notification-icon {
                color: #ef4444;
            }

    .notification-content {
        display: flex;
        align-items: center;
        gap: 14px;
        flex-grow: 1;
    }

    .notification-icon {
        font-size: 1.3rem;
        flex-shrink: 0;
    }

    .notification-message {
        font-weight: 500;
    }

    .notification-close {
        cursor: pointer;
        font-size: 1.1rem;
        color: #718096;
        margin-left: 15px;
        transition: color 0.2s ease;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

        .notification-close:hover {
            color: #4a5568;
            background-color: rgba(0, 0, 0, 0.05);
        }

    .notification.hide {
        animation: fadeOut 0.3s ease-out forwards;
    }

    @@keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: scale(1);
        }

        to {
            opacity: 0;
            transform: scale(0.9);
        }
    }

    @@media (max-width: 480px) {
        .register-container {
            padding: 25px 20px;
        }
    }
</style>

<div class="register-container">
    <h2>Đăng Ký</h2>
    <form id="registerForm">
        <div class="input-group">
            <i class='bx bx-user'></i>
            <input type="text" id="username" name="username" placeholder="Tên đăng nhập">
            <div class="error-message">Vui lòng nhập tên đăng nhập</div>
        </div>
        <div class="input-group">
            <i class='bx bx-envelope'></i>
            <input type="email" id="email" name="email" placeholder="Email">
            <div class="error-message">Vui lòng nhập email hợp lệ</div>
        </div>
        <div class="input-group">
            <i class='bx bxs-lock-alt'></i>
            <input type="password" id="password" name="password" placeholder="Mật khẩu">
            <div class="error-message">Mật khẩu phải có ít nhất 6 ký tự</div>
        </div>
        <div class="input-group">
            <i class='bx bxs-lock-alt'></i>
            <input type="password" id="confirm-password" name="confirm-password" placeholder="Xác nhận mật khẩu">
            <div class="error-message">Mật khẩu không khớp</div>
        </div>
        <button type="submit" class="btn-register">
            <i class='bx bx-check-circle'></i> Đăng Ký
        </button>
    </form>
    <p class="toggle-text">
        Đã có tài khoản?
        <a asp-controller="Account" asp-action="Login" class="toggle-form">Đăng nhập ngay</a>
    </p>
</div>

<!-- Notification container -->
<div class="notification-container" id="notificationContainer"></div>

@section Scripts {
    <script>
        // Hệ thống thông báo (Notification System)
        function showNotification(message, type = 'success', duration = 4000) {
            const container = document.getElementById('notificationContainer');

            // Tạo phần tử notification
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;

            // Nội dung thông báo
            const content = document.createElement('div');
            content.className = 'notification-content';

            // Icon dựa trên loại thông báo
            const icon = document.createElement('i');
            icon.className = type === 'success'
                ? 'fas fa-check-circle notification-icon'
                : 'fas fa-exclamation-circle notification-icon';
            content.appendChild(icon);

            // Thông điệp
            const messageDiv = document.createElement('div');
            messageDiv.className = 'notification-message';
            messageDiv.textContent = message;
            content.appendChild(messageDiv);

            notification.appendChild(content);

            // Nút đóng thông báo
            const closeBtn = document.createElement('span');
            closeBtn.innerHTML = '&times;';
            closeBtn.className = 'notification-close';
            closeBtn.onclick = function() {
                closeNotification(notification);
            };
            notification.appendChild(closeBtn);

            container.appendChild(notification);

            // Tự ẩn sau thời gian duration
            if (duration) {
                setTimeout(() => {
                    closeNotification(notification);
                }, duration);
            }

            return notification;
        }

        function closeNotification(notification) {
            if (notification.parentNode) {
                notification.classList.add('hide');
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }
        }

        // Xử lý submit form đăng ký
        document.getElementById('registerForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const username = document.getElementById('username');
            const email = document.getElementById('email');
            const password = document.getElementById('password');
            const confirmPassword = document.getElementById('confirm-password');

            // Reset trạng thái lỗi cũ
            document.querySelectorAll('.input-group').forEach(group => {
                group.classList.remove('error');
            });

            let isValid = true;

            // Kiểm tra username
            if (!username.value.trim()) {
                username.parentElement.classList.add('error');
                isValid = false;
            }

            // Kiểm tra email
            if (!email.value.trim()) {
                email.parentElement.classList.add('error');
                isValid = false;
            }

            // Kiểm tra password (>= 6 ký tự)
            if (!password.value || password.value.length < 6) {
                password.parentElement.classList.add('error');
                isValid = false;
            }

            // Kiểm tra xác nhận password
            if (password.value !== confirmPassword.value) {
                confirmPassword.parentElement.classList.add('error');
                isValid = false;
            }

            if (!isValid) return;

            // Tạo payload gửi lên API
            const payload = {
                Username: username.value.trim(),
                Email: email.value.trim(),
                Password: password.value
            };

            try {
                const response = await fetch('http://localhost:5243/api/auth/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                const data = await response.json();

                if (!response.ok) {
                    showNotification(data.message || 'Đăng ký không thành công!', 'error');
                } else {
                    showNotification(data.message || 'Đăng ký thành công!', 'success');
                    // Chuyển hướng sau khi thông báo thành công (ví dụ 2 giây)
                    setTimeout(() => {
                        window.location.href = '/Account/Login';
                    }, 2000);
                }
            } catch (error) {
                console.error('Lỗi khi đăng ký:', error);
                showNotification('Đã có lỗi xảy ra. Vui lòng thử lại sau.', 'error');
            }
        });

        // Xóa trạng thái lỗi khi người dùng nhập liệu
        document.querySelectorAll('input').forEach(input => {
            input.addEventListener('input', function() {
                this.parentElement.classList.remove('error');
            });
        });
    </script>
}

